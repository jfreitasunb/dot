set exrc
syn on
set guicursor=
set relativenumber
set nu
set nohlsearch
set hidden
set noerrorbells
set tabstop=4 softtabstop=4
set shiftwidth=4
set expandtab
set smartindent
set noswapfile
set nobackup
set undodir=~/.vim/undodir
set undofile
set incsearch
set termguicolors
set scrolloff=8
" set colorcolumn=80
set signcolumn=yes
set encoding=utf-8
set fileencoding=utf-8

"let g:coc_global_extensions = ['coc-json', '@yaegassy/coc-intelephense', 'coc-blade-linter', 'coc-css ', 'coc-cssmodules', 'coc-emmet', 'coc-html', 'coc-html-css-support', 'coc-tailwindcss', 'coc-vimtex', 'coc-blade-formatter']

let mapleader = " "

call plug#begin('~/.vim/plugged')
    Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
    Plug 'junegunn/fzf.vim'
    Plug 'lervag/vimtex'
    " A Vim Plugin for Lively Previewing LaTeX PDF Output
    Plug 'xuhdev/vim-latex-live-preview', { 'for': 'tex' }
    Plug 'morhetz/gruvbox'
    Plug 'lifepillar/vim-solarized8'
    Plug 'tpope/vim-fugitive'
    Plug 'mattn/emmet-vim'
    Plug 'tpope/vim-sensible'
    Plug 'preservim/nerdtree'
    Plug 'ap/vim-css-color'
    Plug 'voldikss/vim-floaterm'
    Plug 'bling/vim-bufferline'
    Plug 'ryanoasis/vim-devicons'
    Plug 'vim-syntastic/syntastic'
    Plug 'vim-airline/vim-airline'
    Plug 'vim-airline/vim-airline-themes'
    Plug 'mbbill/undotree'
    Plug 'joshdick/onedark.vim'
    Plug 'neoclide/coc.nvim', {'branch': 'release'}

    "CoC extensions
"    Plug 'yaegassy/coc-blade-formatter', {'do': 'yarn install --frozen-lockfile'}
"    Plug 'yaegassy/coc-blade-linter', {'do': 'yarn install --frozen-lockfile'}

call plug#end()

"highlight LineNr term=italic cterm=NONE ctermfg=Grey ctermbg=NONE guifg=#353b45
"colorscheme onedark

"let g:solarized_termcolors=256
"set background=dark
"set t_Co=256
"colorscheme solarized8
colorscheme gruvbox
set bg=dark

" Airline Settings
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#formatter = 'default'
let g:airline_powerline_fonts = 1
let g:airline#extensions#default#section_truncate_width = {
      \ 'b': 90,
      \ 'x': 70,
      \ 'y': 90,
      \ 'z': 50,
      \ 'warning': 80,
      \ 'error': 80,
      \ }

nnoremap <leader>n :NERDTreeFocus<CR>
nnoremap <C-n> :NERDTree<CR>
nnoremap <C-t> :NERDTreeToggle<CR>
nnoremap <C-f> :NERDTreeFind<CR>
"nnoremap <space>n :set number!<CR>
"nnoremap <leader>u :UndotreeShow<CR>

let g:NERDTreeDirArrowExpandable = '󰍝'
let g:NERDTreeDirArrowCollapsible = '󰍟'

"Vim-Devicons Configurations
let g:webdevicons_enable = 1
let g:webdevicons_enable_unite = 1
let g:webdevicons_enable_nerdtree = 1
let g:webdevicons_enable_airline_tabline = 1
let g:webdevicons_enable_airline_statusline = 1
let g:WebDevIconsUnicodeGlyphDoubleWidth = 1
let g:WebDevIconsOS = 'Darwin'

" buffer  line configurations
let g:bufferline_fixed_index =  0 "always first
let g:bufferline_fixed_index =  1 "always second (default)
let g:bufferline_fixed_index = -1 "always last
let g:bufferline_modified = '+'
let g:bufferline_show_bufnr = 1
let g:bufferline_active_buffer_left = '['
let g:bufferline_active_buffer_right = '󰍟'
let g:bufferline_modified = '󰄴 '

set splitright
set splitbelow

" open terminal on the bottom
function! OpenTerminal()
  split term://zsh
  resize 20
endfunction

" VimTeX commands

nmap <leader>ll <Plug>(vimtex-compile)
nmap <leader>lk <Plug>(vimtex-stop)
nmap <leader>lc <Plug>(vimtex-clean)



nmap <leader>gd <Plug>(coc-definition)
nmap <leader>gr <Plug>(coc-references)
nnoremap <C-p> :GFiles<CR>

noremap  <Up>     <NOP>
inoremap <Down>   <NOP>
inoremap <Left>   <NOP>
inoremap <Right>  <NOP>
noremap  <Up>     <NOP>
noremap  <Down>   <NOP>
noremap  <Left>   <NOP>
noremap  <Right>  <NOP>

fun! TrimWhitespace()
    let l:save = winsaveview()
    keeppatterns %s/\s\+$//e
    call winrestview(l:save)
endfun

augroup JOTA
    autocmd!
    autocmd BufWritePre * :call TrimWhitespace()
augroup END
